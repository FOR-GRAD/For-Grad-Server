name: Java CI with Gradle

# main 브랜치에 pr이 생겼을 때 동작
on:
  pull_request:
    branches:
      - main

permissions:
  contents: read

jobs:
  # jar & docker image 빌드하기
  build-docker-image:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
        # 1. Java 17 설정
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

        # Submodule 추가
      - name: Add Submodule
        uses: actions/checkout@v3
        with:
          token: ${{ secrets.ACTION_TOKEN }}
          submodules: recursive

        # jar 빌드
      - name: Build with Gradle
        uses: gradle/gradle-build-action@67421db6bd0bf253fb4bd25b31ebb98943c375e1
        with:
          arguments: clean bootJar

        # docker image 빌드
      - name: docker image build
        run: docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/forgrad-app .

        # Docker Hub 로그인
      - name: docker login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

        # Docker Image push
      - name: docker Hub push
        run: docker push ${{ secrets.DOCKERHUB_USERNAME }}/forgrad-app

  run-docker-image-on-ec2:
    # merge 되었을 때 실행
    if: github.event.pull_request.merged == true
    # 위의 과정들이 완료되어야 실행 됨
    needs: build-docker-image

    runs-on: self-hosted

    steps:
        # docker image 받기
      - name: docker pull
        run: sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/forgrad-app

        # 기존의 컨테이너 중지
      - name: docker stop container
        run: sudo docker stop $(sudo docker ps -q) 2>/dev/null || true

        # 새로운 컨테이너 실행
      - name: docker run new container
        run: sudo docker run --name forgrad-app --rm -d -p 8080:8080 -e TZ=Asia/Seoul -v /home/ubuntu/logs:/log ${{ secrets.DOCKERHUB_USERNAME }}/forgrad-app

        # 미사용 이미지 정리
      - name: delete old docker image
        run: sudo docker system prune -f
